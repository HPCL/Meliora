# lextab.py. This file automatically created by PLY (version 3.3). Don't edit!
_tabversion   = '3.3'
_lextokens    = {'LNOT': 1, 'LINECOMMENT': 1, 'TRANSFORM': 1, 'LOR': 1, 'DIVEQUAL': 1, 'MINUS': 1, 'GOTO': 1, 'LAND': 1, 'RPAREN': 1, 'FCONST': 1, 'SEMI': 1, 'COLON': 1, 'MODEQUAL': 1, 'NE': 1, 'LT': 1, 'PLUS': 1, 'COMMA': 1, 'PERIOD': 1, 'GT': 1, 'DIVIDE': 1, 'FOR': 1, 'PLUSPLUS': 1, 'EQUALS': 1, 'RBRACE': 1, 'ELSE': 1, 'PLUSEQUAL': 1, 'GE': 1, 'LE': 1, 'ICONST': 1, 'LPAREN': 1, 'MINUSMINUS': 1, 'TIMES': 1, 'EQ': 1, 'ID': 1, 'IF': 1, 'AND': 1, 'LBRACKET': 1, 'LBRACE': 1, 'MINUSEQUAL': 1, 'SCONST_S': 1, 'NOT': 1, 'SCONST_D': 1, 'RBRACKET': 1, 'TIMESEQUAL': 1, 'OR': 1, 'MOD': 1}
_lexreflags   = 0
_lexliterals  = ''
_lexstateinfo = {'INITIAL': 'inclusive'}
_lexstatere   = {'INITIAL': [('(?P<t_ID>[A-Za-z_]([_\\.\\w]*[_\\w]+)*)|(?P<t_NEWLINE>\\n+)|(?P<t_FCONST>((\\d+)(\\.\\d*)([eE](\\+|-)?(\\d+))? | (\\d+)[eE](\\+|-)?(\\d+)))|(?P<t_SCONST_S>\\\'([^\\\\\\n]|(\\\\.))*?\\\')|(?P<t_SCONST_D>\\"([^\\\\\\n]|(\\\\.))*?\\")|(?P<t_LINECOMMENT>[\\#!][^\\n\\r]*)|(?P<t_PLUSPLUS>\\+\\+)|(?P<t_LOR>\\|\\|)|(?P<t_ICONST>\\d+)|(?P<t_TIMESEQUAL>\\*=)|(?P<t_PLUSEQUAL>\\+=)|(?P<t_PLUS>\\+)|(?P<t_MINUSEQUAL>-=)|(?P<t_MODEQUAL>%=)|(?P<t_LBRACE>\\{)|(?P<t_DIVEQUAL>/=)|(?P<t_LE><=)|(?P<t_LBRACKET>\\[)|(?P<t_LPAREN>\\()|(?P<t_EQ>==)|(?P<t_NE>!=)|(?P<t_RBRACE>\\})|(?P<t_MINUSMINUS>--)|(?P<t_PERIOD>\\.)|(?P<t_TIMES>\\*)|(?P<t_GE>>=)|(?P<t_RPAREN>\\))|(?P<t_LAND>&&)|(?P<t_RBRACKET>\\])|(?P<t_EQUALS>=)|(?P<t_LT><)|(?P<t_COMMA>,)|(?P<t_DIVIDE>/)|(?P<t_SEMI>;)|(?P<t_MINUS>-)|(?P<t_GT>>)|(?P<t_MOD>%)|(?P<t_COLON>:)|(?P<t_LNOT>!)', [None, ('t_ID', 'ID'), None, ('t_NEWLINE', 'NEWLINE'), (None, 'FCONST'), None, None, None, None, None, None, None, None, None, (None, 'SCONST_S'), None, None, (None, 'SCONST_D'), None, None, (None, 'LINECOMMENT'), (None, 'PLUSPLUS'), (None, 'LOR'), (None, 'ICONST'), (None, 'TIMESEQUAL'), (None, 'PLUSEQUAL'), (None, 'PLUS'), (None, 'MINUSEQUAL'), (None, 'MODEQUAL'), (None, 'LBRACE'), (None, 'DIVEQUAL'), (None, 'LE'), (None, 'LBRACKET'), (None, 'LPAREN'), (None, 'EQ'), (None, 'NE'), (None, 'RBRACE'), (None, 'MINUSMINUS'), (None, 'PERIOD'), (None, 'TIMES'), (None, 'GE'), (None, 'RPAREN'), (None, 'LAND'), (None, 'RBRACKET'), (None, 'EQUALS'), (None, 'LT'), (None, 'COMMA'), (None, 'DIVIDE'), (None, 'SEMI'), (None, 'MINUS'), (None, 'GT'), (None, 'MOD'), (None, 'COLON'), (None, 'LNOT')])]}
_lexstateignore = {'INITIAL': ' \t'}
_lexstateerrorf = {'INITIAL': 't_error'}
